<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\DB;

class TranslateDatabaseToRussian extends Command
{
    protected $signature = 'db:translate-russian';
    protected $description = '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä—É—Å—Å–∫–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫–æ –≤—Å–µ–º –ø–æ–ª—è–º –ë–î';

    // –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è common –ø–æ–ª–µ–π
    protected $dictionary = [
        // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        'id' => 'ID',
        'name' => '–ù–∞–∑–≤–∞–Ω–∏–µ',
        'title' => '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
        'description' => '–û–ø–∏—Å–∞–Ω–∏–µ',
        'comment' => '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
        'notes' => '–ó–∞–º–µ—Ç–∫–∏',
        
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        'email' => 'Email',
        'password' => '–ü–∞—Ä–æ–ª—å',
        'remember_token' => '–¢–æ–∫–µ–Ω –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è',
        'email_verified_at' => '–î–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email',
        
        // –î–∞—Ç—ã
        'created_at' => '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
        'updated_at' => '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
        'deleted_at' => '–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è',
        'published_at' => '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
        'completed_at' => '–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è',
        'start_time' => '–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞',
        'end_time' => '–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è',
        'work_date' => '–î–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã',
        
        // –°—Ç–∞—Ç—É—Å—ã
        'status' => '–°—Ç–∞—Ç—É—Å',
        'state' => '–°–æ—Å—Ç–æ—è–Ω–∏–µ',
        'type' => '–¢–∏–ø',
        
        // –†–∞–±–æ—Ç–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª
        'workers_count' => '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö',
        'shift_duration' => '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã (—á–∞—Å—ã)',
        'executor_type' => '–¢–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è',
        'dispatcher_id' => 'ID –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞',
        'initiator_id' => 'ID –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞',
        'brigadier_id' => 'ID –±—Ä–∏–≥–∞–¥–∏—Ä–∞',
        'user_id' => 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        
        // –ü—Ä–æ–µ–∫—Ç—ã –∏ –∞–¥—Ä–µ—Å–∞
        'project_id' => 'ID –ø—Ä–æ–µ–∫—Ç–∞',
        'purpose_id' => 'ID –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è',
        'address_id' => 'ID –∞–¥—Ä–µ—Å–∞',
        'specialty_id' => 'ID —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
        'work_type_id' => 'ID —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç',
        
        // –§–∏–Ω–∞–Ω—Å—ã
        'price' => '–¶–µ–Ω–∞',
        'amount' => '–°—É–º–º–∞',
        'rate' => '–°—Ç–∞–≤–∫–∞',
        'cost' => '–°—Ç–æ–∏–º–æ—Å—Ç—å',
        'total' => '–ò—Ç–æ–≥–æ',
        
        // –ö–æ–Ω—Ç–∞–∫—Ç—ã
        'phone' => '–¢–µ–ª–µ—Ñ–æ–Ω',
        'address' => '–ê–¥—Ä–µ—Å',
        'location' => '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
        'coordinates' => '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã',
        
        // –§–∞–π–ª—ã
        'image' => '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        'photo' => '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
        'file' => '–§–∞–π–ª',
        'document' => '–î–æ–∫—É–º–µ–Ω—Ç',
    ];

    public function handle()
    {
        $this->info('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ –ø–æ–ª–µ–π –ë–î...');
        
        $tables = DB::select('SHOW TABLES');
        $dbName = config('database.connections.mysql.database');
        
        $totalTranslated = 0;
        
        foreach ($tables as $table) {
            $tableName = $table->{'Tables_in_'.$dbName};
            $this->info("\nüìä –¢–∞–±–ª–∏—Ü–∞: {$tableName}");
            
            $columns = DB::select("SHOW FULL COLUMNS FROM {$tableName}");
            
            foreach ($columns as $column) {
                $russianComment = $this->translateColumn($column->Field);
                
                if ($russianComment) {
                    try {
                        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ–ª—é
                        DB::statement("ALTER TABLE {$tableName} MODIFY COLUMN {$column->Field} {$column->Type} COMMENT '{$russianComment}'");
                        $this->line("   ‚úÖ {$column->Field} ‚Üí {$russianComment}");
                        $totalTranslated++;
                    } catch (\Exception $e) {
                        $this->error("   ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {$column->Field}: {$e->getMessage()}");
                    }
                }
            }
        }
        
        $this->info("\nüéâ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –ø–æ–ª–µ–π: {$totalTranslated}");
        $this->info("üí° –û–±–Ω–æ–≤–∏ –¥–∏–∞–≥—Ä–∞–º–º—É –≤ MySQL Workbench —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è!");
    }
    
    protected function translateColumn($columnName)
    {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—è
        if (isset($this->dictionary[$columnName])) {
            return $this->dictionary[$columnName];
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ snake_case –≤ —á–∏—Ç–∞–µ–º—ã–π —Ä—É—Å—Å–∫–∏–π
        $translated = str_replace('_', ' ', $columnName);
        $translated = ucfirst($translated);
        
        return $translated;
    }
}
