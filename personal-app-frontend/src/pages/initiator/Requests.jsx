// personal-app-frontend/src/pages/initiator/Requests.jsx
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './Requests.css';

const Requests = () => {
  const [requests, setRequests] = useState([]);
  const [filterMode, setFilterMode] = useState('my'); // 'my' –∏–ª–∏ 'all'
  const [filters, setFilters] = useState({
    status: '',
    specialization: '',
    date: ''
  });
  const [loading, setLoading] = useState(true);

  // Mock –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–æ–∫
  useEffect(() => {
    const mockRequests = [
      {
        id: 1,
        requestNumber: '–°–ê–î-001/2025',
        date: '2025-10-10',
        time: '08:00',
        duration: 8,
        workersCount: 3,
        address: '—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, 1',
        brigadier: { name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤' },
        specialization: '—Å–∞–¥–æ–≤–Ω–∏–∫–∏',
        executorType: 'our_staff',
        workType: '–ø–æ—Å–∞–¥–∫–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π',
        project: '–û–∑–µ–ª–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∫–∞',
        purpose: '–í–µ—Å–µ–Ω–Ω—è—è –ø–æ—Å–∞–¥–∫–∞',
        payerCompany: '–û–û–û "–ì–æ—Ä–æ–¥—Å–∫–∏–µ –ø–∞—Ä–∫–∏"',
        status: 'published',
        comment: '–†–∞–±–æ—Ç–∞ –Ω–∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –∫–ª—É–º–±–µ',
        initiator: { id: 7, name: '–ë–æ–±–∫–æ–≤–∞ –î–∏–∞–Ω–∞' }
      },
      {
        id: 2,
        requestNumber: '–î–ï–ö-002/2025',
        date: '2025-10-11',
        time: '09:00',
        duration: 6,
        workersCount: 2,
        address: '—É–ª. –ü–∞—Ä–∫–æ–≤–∞—è, 15',
        brigadier: { name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞' },
        specialization: '–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã',
        executorType: 'our_staff',
        workType: '–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤—Ö–æ–¥–∞',
        project: '–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏',
        purpose: '–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ',
        payerCompany: '–û–û–û "–õ–∞–Ω–¥—à–∞—Ñ—Ç –ü—Ä–æ"',
        status: 'in_work',
        comment: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ö–æ–¥–∞',
        initiator: { id: 8, name: '–î—Ä—É–≥–æ–π –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä' }
      }
    ];
    
    setRequests(mockRequests);
    setLoading(false);
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞—è–≤–æ–∫
  const filteredRequests = requests.filter(request => {
    if (filterMode === 'my' && request.initiator.id !== 7) {
      return false;
    }
    
    if (filters.status && request.status !== filters.status) {
      return false;
    }
    
    if (filters.specialization && request.specialization !== filters.specialization) {
      return false;
    }
    
    if (filters.date && request.date !== filters.date) {
      return false;
    }
    
    return true;
  });

  const getStatusDisplay = (status) => {
    const statusMap = {
      'draft': 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫',
      'published': 'üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞',
      'in_work': 'üîÑ –í —Ä–∞–±–æ—Ç–µ',
      'staffed': 'üë• –£–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω–∞',
      'in_progress': '‚ö° –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è',
      'completed': '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞',
      'cancelled': '‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞'
    };
    return statusMap[status] || status;
  };

  const getStatusColor = (status) => {
    const colors = {
      'draft': '#6c757d',
      'published': '#17a2b8',
      'in_work': '#ffc107',
      'staffed': '#28a745',
      'in_progress': '#007bff',
      'completed': '#20c997',
      'cancelled': '#dc3545'
    };
    return colors[status] || '#6c757d';
  };

  const handlePublish = (requestId) => {
    // TODO: API call –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    setRequests(prev => prev.map(req => 
      req.id === requestId ? { ...req, status: 'published' } : req
    ));
  };

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</div>;
  }

  return (
    <div className="requests-page">
      <div className="page-header">
        <div className="header-content">
          <h1>–ó–∞—è–≤–∫–∏</h1>
          <Link to="/initiator/create-request" className="btn-primary">
            + –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É
          </Link>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div className="filters-panel">
        <div className="filter-group">
          <label>–ü–æ–∫–∞–∑–∞—Ç—å:</label>
          <select 
            value={filterMode} 
            onChange={(e) => setFilterMode(e.target.value)}
            className="filter-select"
          >
            <option value="my">–í–∞—à–∏ –∑–∞—è–≤–∫–∏</option>
            <option value="all">–í—Å–µ –∑–∞—è–≤–∫–∏</option>
          </select>
        </div>

        <div className="filter-group">
          <label>–°—Ç–∞—Ç—É—Å:</label>
          <select 
            value={filters.status} 
            onChange={(e) => setFilters(prev => ({ ...prev, status: e.target.value }))}
            className="filter-select"
          >
            <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
            <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
            <option value="published">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞</option>
            <option value="in_work">–í —Ä–∞–±–æ—Ç–µ</option>
            <option value="staffed">–£–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω–∞</option>
            <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω–∞</option>
          </select>
        </div>

        <div className="filter-group">
          <label>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:</label>
          <select 
            value={filters.specialization} 
            onChange={(e) => setFilters(prev => ({ ...prev, specialization: e.target.value }))}
            className="filter-select"
          >
            <option value="">–í—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</option>
            <option value="—Å–∞–¥–æ–≤–Ω–∏–∫–∏">–°–∞–¥–æ–≤–Ω–∏–∫–∏</option>
            <option value="–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã">–î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã</option>
            <option value="–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã</option>
          </select>
        </div>

        <div className="filter-group">
          <label>–î–∞—Ç–∞:</label>
          <input
            type="date"
            value={filters.date}
            onChange={(e) => setFilters(prev => ({ ...prev, date: e.target.value }))}
            className="date-input"
          />
        </div>

        <button 
          onClick={() => setFilters({ status: '', specialization: '', date: '' })}
          className="btn-clear"
        >
          –°–±—Ä–æ—Å–∏—Ç—å
        </button>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫ */}
      <div className="table-container">
        <table className="requests-table">
          <thead>
            <tr>
              <th>‚Ññ –ó–∞—è–≤–∫–∏</th>
              <th>–î–∞—Ç–∞/–í—Ä–µ–º—è</th>
              <th>–ê–¥—Ä–µ—Å</th>
              <th>–ë—Ä–∏–≥–∞–¥–∏—Ä</th>
              <th>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</th>
              <th>–ö–æ–ª-–≤–æ</th>
              <th>–ü—Ä–æ–µ–∫—Ç</th>
              <th>–°—Ç–∞—Ç—É—Å</th>
              <th>–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            {filteredRequests.length === 0 ? (
              <tr>
                <td colSpan="9" className="no-data">
                  –ó–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                </td>
              </tr>
            ) : (
              filteredRequests.map(request => (
                <tr key={request.id}>
                  <td>
                    <strong>{request.requestNumber}</strong>
                  </td>
                  <td>
                    <div>{new Date(request.date).toLocaleDateString('ru-RU')}</div>
                    <div className="time">{request.time}</div>
                  </td>
                  <td>{request.address}</td>
                  <td>{request.brigadier.name}</td>
                  <td>{request.specialization}</td>
                  <td>{request.workersCount} —á–µ–ª.</td>
                  <td>{request.project}</td>
                  <td>
                    <span 
                      className="status-badge"
                      style={{backgroundColor: getStatusColor(request.status)}}
                    >
                      {getStatusDisplay(request.status)}
                    </span>
                  </td>
                  <td>
                    <div className="actions-cell">
                      <button className="action-btn view-btn" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                        üëÅÔ∏è
                      </button>
                      {request.status === 'draft' && (
                        <button 
                          onClick={() => handlePublish(request.id)}
                          className="action-btn publish-btn"
                          title="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
                        >
                          üì§
                        </button>
                      )}
                      {request.initiator.id === 7 && (
                        <button className="action-btn edit-btn" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                          ‚úèÔ∏è
                        </button>
                      )}
                    </div>
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default Requests;
