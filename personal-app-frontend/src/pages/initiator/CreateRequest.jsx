// personal-app-frontend/src/pages/initiator/CreateRequest.jsx
import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import './CreateRequest.css';

const CreateRequest = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    date: '',
    time: '08:00',
    duration: 8,
    workersCount: 1,
    
    // –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    address: '',
    brigadierId: '',
    contactPerson: '',
    comment: '',
    
    // –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    specialization: '',
    executorType: '',
    workType: '',
    
    // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    project: '',
    purpose: '',
    payerCompany: ''
  });

  const [availableBrigadiers, setAvailableBrigadiers] = useState([]);
  const [showContactPerson, setShowContactPerson] = useState(false);
  const [availableExecutorTypes, setAvailableExecutorTypes] = useState([]);

  // –°–ø–∏—Å–∫–∏ –¥–ª—è select'–æ–≤
  const specializations = [
    '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
    '–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã', 
    '–ø–æ–º–æ—â–Ω–∏–∫ —Å–∞–¥–æ–≤–Ω–∏–∫–∞',
    '—Å–∞–¥–æ–≤–Ω–∏–∫–∏',
    '—Å–∞–¥–æ–≤–Ω–∏–∫–∏ (—Ö–∏–º. –æ–±—Ä–∞–±–æ—Ç–∫–∞)',
    '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—é',
    '—Å—Ç–∞—Ä—à–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
    '—Å—Ç–∞—Ä—à–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã',
    '—Å—Ç–∞—Ä—à–∏–µ —Å–∞–¥–æ–≤–Ω–∏–∫–∏',
    '—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–µ—Ä–µ–≤—å–µ–≤',
    '—à—Ç–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã'
  ];

  const workTypes = [
    '–≤—ã—Å–æ—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
    '–¥–µ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', 
    '–¥—Ä—É–≥–æ–µ',
    '–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
    '–æ–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–æ–±—Ä–µ–Ω–∏—è–º–∏',
    '–ø–æ–≥—Ä—É–∑–æ—á–Ω–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
    '–ø–æ–ª–∏–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π',
    '–ø–æ—Å–∞–¥–∫–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π',
    '—Ä–∞–±–æ—Ç—ã –ø–æ —É—Ö–æ–¥—É –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',
    '—Ä–∞–∑–≥—Ä—É–∑–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤',
    '—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤',
    '—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–±–æ—Ä–æ–≤'
  ];

  const projects = [
    '–û–∑–µ–ª–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∫–∞',
    '–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏',
    '–°–µ–∑–æ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
    '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç'
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—Ä–∏–≥–∞–¥–∏—Ä–æ–≤
  useEffect(() => {
    // TODO: API call –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±—Ä–∏–≥–∞–¥–∏—Ä–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
    const mockBrigadiers = [
      { id: 1, name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', specialization: '—Å–∞–¥–æ–≤–Ω–∏–∫' },
      { id: 2, name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', specialization: '–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä' },
      { id: 3, name: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ' }
    ];
    setAvailableBrigadiers(mockBrigadiers);
  }, [formData.date]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
  useEffect(() => {
    if (formData.specialization) {
      // TODO: API call –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
      // –ü–æ–∫–∞ mock –ª–æ–≥–∏–∫–∞
      const types = ['our_staff'];
      if (formData.specialization.includes('—Å–∞–¥–æ–≤–Ω–∏–∫')) {
        types.push('contractor');
      }
      setAvailableExecutorTypes(types);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –µ—Å–ª–∏ –æ–Ω —Å—Ç–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      if (formData.executorType && !types.includes(formData.executorType)) {
        setFormData(prev => ({ ...prev, executorType: '' }));
      }
    } else {
      setAvailableExecutorTypes([]);
    }
  }, [formData.specialization]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –±—Ä–∏–≥–∞–¥–∏—Ä–∞
  const handleBrigadierChange = (e) => {
    const value = e.target.value;
    setFormData(prev => ({ ...prev, brigadierId: value }));
    setShowContactPerson(value === '3'); // ID –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // TODO: API call –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏:', formData);
    navigate('/initiator/requests');
  };

  const handleSaveDraft = () => {
    // TODO: API call –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞:', formData);
    navigate('/initiator/requests');
  };

  const isFormValid = () => {
    return formData.date &&
           formData.time &&
           formData.duration > 0 &&
           formData.workersCount > 0 &&
           formData.address &&
           (formData.brigadierId || formData.contactPerson) &&
           formData.specialization &&
           formData.executorType &&
           formData.workType &&
           formData.project &&
           formData.purpose;
  };

  return (
    <div className="create-request-page">
      <div className="page-header">
        <div className="formation-rules">
            <h3>üîí –ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏</h3>
            <ul>
                <li>–û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ = –æ–¥–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å + –æ–¥–∏–Ω —Ç–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è + –æ–¥–∏–Ω –ë—Ä–∏–≥–∞–¥–∏—Ä</li>
                <li>–ö–∞–∂–¥–∞—è –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è</li>
                <li>–ö–∞–∂–¥–∞—è –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è</li>
                <li>–ö–∞–∂–¥–∞—è –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –ë—Ä–∏–≥–∞–¥–∏—Ä–∞/–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ</li>
            </ul>
        </div>
        <div className="header-content">
          <h1>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏</h1>
          <Link to="/initiator/requests" className="back-link">
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∑–∞—è–≤–∫–∞–º
          </Link>
        </div>
        <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏</p>
      </div>

      <form onSubmit={handleSubmit} className="request-form">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <section className="form-section">
          <h2>üìÖ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
          <div className="form-grid">
            <div className="form-group">
              <label>–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç *</label>
              <input
                type="date"
                name="date"
                value={formData.date}
                onChange={handleInputChange}
                min={new Date().toISOString().split('T')[0]}
                required
              />
            </div>

            <div className="form-group">
              <label>–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ *</label>
              <input
                type="time"
                name="time"
                value={formData.time}
                onChange={handleInputChange}
                required
              />
            </div>

            <div className="form-group">
              <label>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã (—á–∞—Å—ã) *</label>
              <input
                type="number"
                name="duration"
                value={formData.duration}
                onChange={handleInputChange}
                min="1"
                max="24"
                required
              />
            </div>

            <div className="form-group">
              <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π *</label>
              <input
                type="number"
                name="workersCount"
                value={formData.workersCount}
                onChange={handleInputChange}
                min="1"
                max="50"
                required
              />
            </div>
          </div>
        </section>

        {/* –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
        <section className="form-section">
          <h2>üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
          <div className="form-grid">
            <div className="form-group full-width">
              <label>–ê–¥—Ä–µ—Å –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç *</label>
              <input
                type="text"
                name="address"
                value={formData.address}
                onChange={handleInputChange}
                placeholder="—É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123"
                required
              />
            </div>

            <div className="form-group">
              <label>–ë—Ä–∏–≥–∞–¥–∏—Ä/–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ *</label>
              <select
                name="brigadierId"
                value={formData.brigadierId}
                onChange={handleBrigadierChange}
                required
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ...</option>
                {availableBrigadiers.map(brigadier => (
                  <option key={brigadier.id} value={brigadier.id}>
                    {brigadier.name}
                  </option>
                ))}
              </select>
            </div>

            {showContactPerson && (
              <div className="form-group">
                <label>–§–ò–û –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞ *</label>
                <input
                  type="text"
                  name="contactPerson"
                  value={formData.contactPerson}
                  onChange={handleInputChange}
                  placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                  required
                />
              </div>
            )}
          </div>

          <div className="form-group">
            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
            <textarea
              name="comment"
              value={formData.comment}
              onChange={handleInputChange}
              placeholder="–§–ò–û –∂–µ–ª–∞–µ–º—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π, –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –æ–¥–µ–∂–¥–µ –∏ —Ç.–¥."
              rows="3"
            />
          </div>
        </section>

        {/* –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */}
        <section className="form-section">
          <h2>üîß –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h2>
          <div className="form-grid">
            <div className="form-group">
              <label>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è *</label>
              <select
                name="specialization"
                value={formData.specialization}
                onChange={handleInputChange}
                required
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</option>
                {specializations.map(spec => (
                  <option key={spec} value={spec}>{spec}</option>
                ))}
              </select>
            </div>

            <div className="form-group">
              <label>–¢–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è *</label>
              <select
                name="executorType"
                value={formData.executorType}
                onChange={handleInputChange}
                required
                disabled={availableExecutorTypes.length === 0}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                {availableExecutorTypes.map(type => (
                  <option key={type} value={type}>
                    {type === 'our_staff' ? '–ù–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫' : '–û—Ç –ø–æ–¥—Ä—è–¥—á–∏–∫–∞'}
                  </option>
                ))}
              </select>
              {availableExecutorTypes.length === 0 && formData.specialization && (
                <div className="info-message">
                  –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤
                </div>
              )}
            </div>

            <div className="form-group">
              <label>–í–∏–¥ —Ä–∞–±–æ—Ç *</label>
              <select
                name="workType"
                value={formData.workType}
                onChange={handleInputChange}
                required
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç</option>
                {workTypes.map(work => (
                  <option key={work} value={work}>{work}</option>
                ))}
              </select>
            </div>
          </div>
        </section>

        {/* –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã */}
        <section className="form-section">
          <h2>üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã</h2>
          <div className="form-grid">
            <div className="form-group">
              <label>–ü—Ä–æ–µ–∫—Ç *</label>
              <select
                name="project"
                value={formData.project}
                onChange={handleInputChange}
                required
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç</option>
                {projects.map(project => (
                  <option key={project} value={project}>{project}</option>
                ))}
              </select>
            </div>

            <div className="form-group">
              <label>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ *</label>
              <input
                type="text"
                name="purpose"
                value={formData.purpose}
                onChange={handleInputChange}
                placeholder="–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞"
                required
              />
            </div>

            <div className="form-group">
              <label>–ö–æ–º–ø–∞–Ω–∏—è-–ø–ª–∞—Ç–µ–ª—å—â–∏–∫</label>
              <input
                type="text"
                name="payerCompany"
                value={formData.payerCompany}
                onChange={handleInputChange}
                placeholder="–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
                readOnly
              />
            </div>
          </div>
        </section>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="form-actions">
          <button
            type="button"
            onClick={handleSaveDraft}
            className="btn-secondary"
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
          </button>
          <button
            type="submit"
            disabled={!isFormValid()}
            className="btn-primary"
          >
            –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É
          </button>
        </div>
      </form>
    </div>
  );
};

export default CreateRequest;
