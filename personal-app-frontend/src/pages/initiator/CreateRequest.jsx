// personal-app-frontend/src/pages/initiator/CreateRequest.jsx
import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import './CreateRequest.css';

// –î–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å —à–∞–≥–æ–º 5 –º–∏–Ω—É—Ç
  const generateTimeOptions = () => {
    const times = [];
    for (let hour = 0; hour < 24; hour++) {
      for (let minute = 0; minute < 60; minute += 5) {
        const timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;
        times.push(timeString);
      }
    }
    return times;
  };

const CreateRequest = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    date: '',
    time: '08:00',
    duration: 8,
    workersCount: 1,
    
    // –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    address: '',
    brigadierId: '',
    contactPerson: '',
    comment: '',
    
    // –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    specialization: '',
    executorType: '',
    workType: '',
    
    // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    project: '',
    purpose: '',
    payerCompany: ''
  });

  const [availableBrigadiers, setAvailableBrigadiers] = useState([]);
  const [showContactPerson, setShowContactPerson] = useState(false);
  const [availableExecutorTypes, setAvailableExecutorTypes] = useState([]);
  const [errors, setErrors] = useState({});
  const [timeOptions] = useState(generateTimeOptions());

  // –°–ø–∏—Å–∫–∏ –¥–ª—è select'–æ–≤
  const specializations = [
    '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã', '–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã', '–ø–æ–º–æ—â–Ω–∏–∫ —Å–∞–¥–æ–≤–Ω–∏–∫–∞', '—Å–∞–¥–æ–≤–Ω–∏–∫–∏',
    '—Å–∞–¥–æ–≤–Ω–∏–∫–∏ (—Ö–∏–º. –æ–±—Ä–∞–±–æ—Ç–∫–∞)', '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—é', '—Å—Ç–∞—Ä—à–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
    '—Å—Ç–∞—Ä—à–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã', '—Å—Ç–∞—Ä—à–∏–µ —Å–∞–¥–æ–≤–Ω–∏–∫–∏', '—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–µ—Ä–µ–≤—å–µ–≤', '—à—Ç–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã'
  ];

  const workTypes = [
    '–≤—ã—Å–æ—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–¥–µ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–¥—Ä—É–≥–æ–µ', '–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã',
    '–æ–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–æ–±—Ä–µ–Ω–∏—è–º–∏', '–ø–æ–≥—Ä—É–∑–æ—á–Ω–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–ø–æ–ª–∏–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π',
    '–ø–æ—Å–∞–¥–∫–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π', '—Ä–∞–±–æ—Ç—ã –ø–æ —É—Ö–æ–¥—É –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏', '—Ä–∞–∑–≥—Ä—É–∑–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤',
    '—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤', '—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–±–æ—Ä–æ–≤'
  ];

  const projects = [
    '–û–∑–µ–ª–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∫–∞', '–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏', '–°–µ–∑–æ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç'
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—Ä–∏–≥–∞–¥–∏—Ä–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
  useEffect(() => {
    if (formData.date) {
      // TODO: API call –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –±—Ä–∏–≥–∞–¥–∏—Ä–æ–≤ –Ω–∞ –¥–∞—Ç—É
      const mockBrigadiers = [
        { id: 1, name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ (—Å–∞–¥–æ–≤–Ω–∏–∫)', specialization: '—Å–∞–¥–æ–≤–Ω–∏–∫', status: 'confirmed' },
        { id: 2, name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞ (–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä)', specialization: '–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä', status: 'confirmed' },
        { id: 3, name: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ' }
      ];
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –±—Ä–∏–≥–∞–¥–∏—Ä–æ–≤
      const confirmedBrigadiers = mockBrigadiers.filter(b => 
        b.id === 3 || b.status === 'confirmed'
      );
      
      setAvailableBrigadiers(confirmedBrigadiers);
    } else {
      setAvailableBrigadiers([]);
    }
  }, [formData.date]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
  useEffect(() => {
    if (formData.specialization) {
      // TODO: API call –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
      const types = ['our_staff'];
      if (formData.specialization.includes('—Å–∞–¥–æ–≤–Ω–∏–∫')) {
        types.push('contractor');
      }
      setAvailableExecutorTypes(types);
      
      if (formData.executorType && !types.includes(formData.executorType)) {
        setFormData(prev => ({ ...prev, executorType: '' }));
      }
    } else {
      setAvailableExecutorTypes([]);
    }
  }, [formData.specialization]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏-–ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞
  useEffect(() => {
    if (formData.project && formData.purpose) {
      // TODO: –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏-–ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞
      setFormData(prev => ({ 
        ...prev, 
        payerCompany: `–û–û–û "${formData.project} –§–∏–Ω–∞–Ω—Å"`
      }));
    }
  }, [formData.project, formData.purpose]);

  const handleBrigadierChange = (e) => {
    const value = e.target.value;
    setFormData(prev => ({ ...prev, brigadierId: value }));
    setShowContactPerson(value === '3');
    if (value === '3') {
      setFormData(prev => ({ ...prev, contactPerson: '' }));
    }
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: '' }));
    }
  };

  const validateForm = () => {
    const newErrors = {};

    if (!formData.date) newErrors.date = '–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–∞–±–æ—Ç';
    if (!formData.time) newErrors.time = '–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞';
    if (!formData.duration || formData.duration < 1) newErrors.duration = '–£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å';
    if (!formData.workersCount || formData.workersCount < 1) newErrors.workersCount = '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π';
    if (!formData.address) newErrors.address = '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å';
    if (!formData.brigadierId && !formData.contactPerson) newErrors.brigadierId = '–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–∏–≥–∞–¥–∏—Ä–∞ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ';
    if (!formData.specialization) newErrors.specialization = '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å';
    if (!formData.executorType) newErrors.executorType = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è';
    if (!formData.workType) newErrors.workType = '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç';
    if (!formData.project) newErrors.project = '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç';
    if (!formData.purpose) newErrors.purpose = '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ';

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    // TODO: API call –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞—è–≤–∫–∏
    console.log('–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞—è–≤–∫–∏:', formData);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    alert('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!');
    navigate('/initiator/requests');
  };

  const handleSaveDraft = () => {
    if (!validateForm()) {
      return;
    }

    // TODO: API call –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞:', formData);
    
    alert('–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
    navigate('/initiator/requests');
  };

  return (
    <div className="create-request-page">
      <div className="page-header">
        <div className="header-content">
          <h1>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏</h1>
          <Link to="/initiator/requests" className="back-link">
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∑–∞—è–≤–∫–∞–º
          </Link>
        </div>
      </div>

      <div className="request-form-container">
        <div className="formation-rules">
          <h3>üîí –ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏</h3>
          <ul>
            <li>–û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ = –æ–¥–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å + –æ–¥–∏–Ω —Ç–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è + –æ–¥–∏–Ω –ë—Ä–∏–≥–∞–¥–∏—Ä</li>
            <li>–ë—Ä–∏–≥–∞–¥–∏—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É</li>
            <li>–ü–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞—è–≤–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–∏–¥–∏–º–æ–π –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤</li>
          </ul>
        </div>

        <form onSubmit={handleSubmit} className="request-form">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <section className="form-section">
            <h2>üìÖ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div className="form-grid">
              <div className="form-group">
                <label>–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç *</label>
                <input
                  type="date"
                  name="date"
                  value={formData.date}
                  onChange={handleInputChange}
                  min={new Date().toISOString().split('T')[0]}
                  className={errors.date ? 'error' : ''}
                />
                {errors.date && <span className="error-message">{errors.date}</span>}
              </div>

              <div className="form-group">
                <label>–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ *</label>
                <select
                    name="time"
                    value={formData.time}
                    onChange={handleInputChange}
                    className={errors.time ? 'error' : ''}
                    required
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</option>
                    {timeOptions.map(time => (
                      <option key={time} value={time}>
                        {time}
                      </option>
                    ))}
                  </select>
                {errors.time && <span className="error-message">{errors.time}</span>}
              </div>

              <div className="form-group">
                <label>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—á–∞—Å—ã) *</label>
                <input
                  type="number"
                  name="duration"
                  value={formData.duration}
                  onChange={handleInputChange}
                  min="1"
                  max="24"
                  className={errors.duration ? 'error' : ''}
                />
                {errors.duration && <span className="error-message">{errors.duration}</span>}
              </div>

              <div className="form-group">
                <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π *</label>
                <input
                  type="number"
                  name="workersCount"
                  value={formData.workersCount}
                  onChange={handleInputChange}
                  min="1"
                  max="50"
                  className={errors.workersCount ? 'error' : ''}
                />
                {errors.workersCount && <span className="error-message">{errors.workersCount}</span>}
              </div>
            </div>
          </section>

          {/* –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
          <section className="form-section">
            <h2>üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
            <div className="form-grid">
              <div className="form-group full-width">
                <label>–ê–¥—Ä–µ—Å –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç *</label>
                <input
                  type="text"
                  name="address"
                  value={formData.address}
                  onChange={handleInputChange}
                  placeholder="—É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123"
                  className={errors.address ? 'error' : ''}
                />
                {errors.address && <span className="error-message">{errors.address}</span>}
              </div>

              <div className="form-group">
                <label>–ë—Ä–∏–≥–∞–¥–∏—Ä/–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ *</label>
                <select
                  name="brigadierId"
                  value={formData.brigadierId}
                  onChange={handleBrigadierChange}
                  className={errors.brigadierId ? 'error' : ''}
                  disabled={!formData.date}
                >
                  <option value="">{formData.date ? '–í—ã–±–µ—Ä–∏—Ç–µ...' : '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É'}</option>
                  {availableBrigadiers.map(brigadier => (
                    <option key={brigadier.id} value={brigadier.id}>
                      {brigadier.name}
                    </option>
                  ))}
                </select>
                {errors.brigadierId && <span className="error-message">{errors.brigadierId}</span>}
                {!formData.date && (
                  <div className="info-message">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—Ä–∏–≥–∞–¥–∏—Ä–æ–≤</div>
                )}
              </div>

              {showContactPerson && (
                <div className="form-group">
                  <label>–§–ò–û –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞ *</label>
                  <input
                    type="text"
                    name="contactPerson"
                    value={formData.contactPerson}
                    onChange={handleInputChange}
                    placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                  />
                </div>
              )}
            </div>

            <div className="form-group">
              <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
              <textarea
                name="comment"
                value={formData.comment}
                onChange={handleInputChange}
                placeholder="–§–ò–û –∂–µ–ª–∞–µ–º—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π, –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –æ–¥–µ–∂–¥–µ –∏ —Ç.–¥."
                rows="3"
              />
            </div>
          </section>

          {/* –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */}
          <section className="form-section">
            <h2>üîß –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</h2>
            <div className="form-grid">
              <div className="form-group">
                <label>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è *</label>
                <select
                  name="specialization"
                  value={formData.specialization}
                  onChange={handleInputChange}
                  className={errors.specialization ? 'error' : ''}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</option>
                  {specializations.map(spec => (
                    <option key={spec} value={spec}>{spec}</option>
                  ))}
                </select>
                {errors.specialization && <span className="error-message">{errors.specialization}</span>}
              </div>

              <div className="form-group">
                <label>–¢–∏–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è *</label>
                <select
                  name="executorType"
                  value={formData.executorType}
                  onChange={handleInputChange}
                  className={errors.executorType ? 'error' : ''}
                  disabled={availableExecutorTypes.length === 0}
                >
                  <option value="">
                    {availableExecutorTypes.length === 0 ? '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å' : '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø'}
                  </option>
                  {availableExecutorTypes.map(type => (
                    <option key={type} value={type}>
                      {type === 'our_staff' ? '–ù–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫' : '–û—Ç –ø–æ–¥—Ä—è–¥—á–∏–∫–∞'}
                    </option>
                  ))}
                </select>
                {errors.executorType && <span className="error-message">{errors.executorType}</span>}
              </div>

              <div className="form-group">
                <label>–í–∏–¥ —Ä–∞–±–æ—Ç *</label>
                <select
                  name="workType"
                  value={formData.workType}
                  onChange={handleInputChange}
                  className={errors.workType ? 'error' : ''}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç</option>
                  {workTypes.map(work => (
                    <option key={work} value={work}>{work}</option>
                  ))}
                </select>
                {errors.workType && <span className="error-message">{errors.workType}</span>}
              </div>
            </div>
          </section>

          {/* –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã */}
          <section className="form-section">
            <h2>üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã</h2>
            <div className="form-grid">
              <div className="form-group">
                <label>–ü—Ä–æ–µ–∫—Ç *</label>
                <select
                  name="project"
                  value={formData.project}
                  onChange={handleInputChange}
                  className={errors.project ? 'error' : ''}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç</option>
                  {projects.map(project => (
                    <option key={project} value={project}>{project}</option>
                  ))}
                </select>
                {errors.project && <span className="error-message">{errors.project}</span>}
              </div>

              <div className="form-group">
                <label>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ *</label>
                <input
                  type="text"
                  name="purpose"
                  value={formData.purpose}
                  onChange={handleInputChange}
                  placeholder="–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞"
                  className={errors.purpose ? 'error' : ''}
                />
                {errors.purpose && <span className="error-message">{errors.purpose}</span>}
              </div>

              <div className="form-group">
                <label>–ö–æ–º–ø–∞–Ω–∏—è-–ø–ª–∞—Ç–µ–ª—å—â–∏–∫</label>
                <input
                  type="text"
                  name="payerCompany"
                  value={formData.payerCompany}
                  onChange={handleInputChange}
                  placeholder="–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
                  readOnly
                />
              </div>
            </div>
          </section>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="form-actions">
            <button
              type="button"
              onClick={handleSaveDraft}
              className="btn-secondary"
            >
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
            </button>
            <button
              type="submit"
              className="btn-primary"
            >
              –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default CreateRequest;
